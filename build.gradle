plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.thinkimi.gradle.MybatisGenerator" version "2.2"
}

group = 'com.luxiaochen'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //implementation 'bouncycastle:bcprov-jdk16:140'
    //分页
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.13'
    //日志
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.3.0.RELEASE'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

test {
    useJUnitPlatform()
}

//mybatis generator plugin ------ start

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = 'generatorConfig.xml'

    // optional, here is the override dependencies for the plugin or you can add other database dependencies.
    dependencies {
        mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.4.0'
        mybatisGenerator 'mysql:mysql-connector-java:8.0.20'
    }
}
//mybatis generator plugin ------ end

processResources {
    from('src/main/java') {
        include '**/*.xml'
    }
}

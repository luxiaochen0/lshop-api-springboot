<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luxiaochen.lshop.dao.BalanceMapper">
  <resultMap id="BaseResultMap" type="com.luxiaochen.lshop.entity.Balance">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="shopId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="action" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="money_after" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, no, shopId, action, type, money, money_after, remark, time
  </sql>
  <select id="selectByExample" parameterType="com.luxiaochen.lshop.entity.BalanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from balance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from balance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luxiaochen.lshop.entity.BalanceExample">
    delete from balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luxiaochen.lshop.entity.Balance">
    insert into balance (id, no, shopId, 
      action, type, money, 
      money_after, remark, time
      )
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{shopid,jdbcType=INTEGER}, 
      #{action,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{money,jdbcType=DECIMAL}, 
      #{moneyAfter,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luxiaochen.lshop.entity.Balance">
    insert into balance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="shopid != null">
        shopId,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="moneyAfter != null">
        money_after,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="action != null">
        #{action,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="moneyAfter != null">
        #{moneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luxiaochen.lshop.entity.BalanceExample" resultType="java.lang.Long">
    select count(*) from balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update balance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.shopid != null">
        shopId = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.moneyAfter != null">
        money_after = #{record.moneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update balance
    set id = #{record.id,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      shopId = #{record.shopid,jdbcType=INTEGER},
      action = #{record.action,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      money = #{record.money,jdbcType=DECIMAL},
      money_after = #{record.moneyAfter,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luxiaochen.lshop.entity.Balance">
    update balance
    <set>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        shopId = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="moneyAfter != null">
        money_after = #{moneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luxiaochen.lshop.entity.Balance">
    update balance
    set no = #{no,jdbcType=VARCHAR},
      shopId = #{shopid,jdbcType=INTEGER},
      action = #{action,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      money = #{money,jdbcType=DECIMAL},
      money_after = #{moneyAfter,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
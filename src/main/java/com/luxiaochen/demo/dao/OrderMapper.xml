<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luxiaochen.demo.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.luxiaochen.demo.entity.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="shop_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="delivery_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="goods_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="delivery_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="pay_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_channel" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pay_channel_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="send_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="complete_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, no, parent_no, status, shop_id, pay_type, delivery_type, goods_money, delivery_money, 
    total_money, pay_money, remark, pay_channel, pay_channel_no, create_time, pay_time, 
    send_time, complete_time
  </sql>
  <select id="selectByExample" parameterType="com.luxiaochen.demo.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luxiaochen.demo.entity.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luxiaochen.demo.entity.Order">
    insert into order (id, no, parent_no, 
      status, shop_id, pay_type, 
      delivery_type, goods_money, delivery_money, 
      total_money, pay_money, remark, 
      pay_channel, pay_channel_no, create_time, 
      pay_time, send_time, complete_time
      )
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{parentNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{shopId,jdbcType=INTEGER}, #{payType,jdbcType=TINYINT}, 
      #{deliveryType,jdbcType=TINYINT}, #{goodsMoney,jdbcType=DECIMAL}, #{deliveryMoney,jdbcType=DECIMAL}, 
      #{totalMoney,jdbcType=DECIMAL}, #{payMoney,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{payChannel,jdbcType=CHAR}, #{payChannelNo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{sendTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luxiaochen.demo.entity.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="parentNo != null">
        parent_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="deliveryType != null">
        delivery_type,
      </if>
      <if test="goodsMoney != null">
        goods_money,
      </if>
      <if test="deliveryMoney != null">
        delivery_money,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payChannel != null">
        pay_channel,
      </if>
      <if test="payChannelNo != null">
        pay_channel_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null">
        #{parentNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="deliveryType != null">
        #{deliveryType,jdbcType=TINYINT},
      </if>
      <if test="goodsMoney != null">
        #{goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="deliveryMoney != null">
        #{deliveryMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=CHAR},
      </if>
      <if test="payChannelNo != null">
        #{payChannelNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luxiaochen.demo.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.parentNo != null">
        parent_no = #{record.parentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.deliveryType != null">
        delivery_type = #{record.deliveryType,jdbcType=TINYINT},
      </if>
      <if test="record.goodsMoney != null">
        goods_money = #{record.goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryMoney != null">
        delivery_money = #{record.deliveryMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.totalMoney != null">
        total_money = #{record.totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payMoney != null">
        pay_money = #{record.payMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=CHAR},
      </if>
      <if test="record.payChannelNo != null">
        pay_channel_no = #{record.payChannelNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeTime != null">
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      parent_no = #{record.parentNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=TINYINT},
      delivery_type = #{record.deliveryType,jdbcType=TINYINT},
      goods_money = #{record.goodsMoney,jdbcType=DECIMAL},
      delivery_money = #{record.deliveryMoney,jdbcType=DECIMAL},
      total_money = #{record.totalMoney,jdbcType=DECIMAL},
      pay_money = #{record.payMoney,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      pay_channel = #{record.payChannel,jdbcType=CHAR},
      pay_channel_no = #{record.payChannelNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      complete_time = #{record.completeTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luxiaochen.demo.entity.Order">
    update order
    <set>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null">
        parent_no = #{parentNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="deliveryType != null">
        delivery_type = #{deliveryType,jdbcType=TINYINT},
      </if>
      <if test="goodsMoney != null">
        goods_money = #{goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="deliveryMoney != null">
        delivery_money = #{deliveryMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="payMoney != null">
        pay_money = #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        pay_channel = #{payChannel,jdbcType=CHAR},
      </if>
      <if test="payChannelNo != null">
        pay_channel_no = #{payChannelNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luxiaochen.demo.entity.Order">
    update order
    set no = #{no,jdbcType=VARCHAR},
      parent_no = #{parentNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      shop_id = #{shopId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=TINYINT},
      delivery_type = #{deliveryType,jdbcType=TINYINT},
      goods_money = #{goodsMoney,jdbcType=DECIMAL},
      delivery_money = #{deliveryMoney,jdbcType=DECIMAL},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      pay_money = #{payMoney,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=CHAR},
      pay_channel_no = #{payChannelNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      complete_time = #{completeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>